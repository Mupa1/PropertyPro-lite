{"version":3,"sources":["../../../api/server/controllers/PropertyController.js"],"names":["dotenv","config","util","Util","cloudinary","API_Environment_variable","process","env","CLOUDINARY_URL","PropertyController","req","res","body","city","estate","type","bedroom","bathroom","image_url","price","sale_or_rent","owner_phone_number","owner_email","setError","send","uploader","upload","result","newProperty","url","PropertyService","addProperty","createdProperty","setSuccess","message","getAllProperties","allProperties","length","id","params","Number","getAProperty","theProperty","alteredProperty","updateProperty","deleteProperty","propertyToDelete"],"mappings":"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","sourcesContent":["import cloudinary from 'cloudinary';\nimport dotenv from 'dotenv';\nimport PropertyService from '../services/PropertyService';\nimport Util from '../utils/Utils';\n\n\ndotenv.config();\nconst util = new Util();\n\ncloudinary.config({\n  API_Environment_variable: process.env.CLOUDINARY_URL\n});\n\nclass PropertyController {\n  static addProperty(req, res) {\n    const { city, estate, type, bedroom, bathroom, image_url, price, sale_or_rent, owner_phone_number, owner_email } = req.body;\n    if (!city || !estate || !type || !bedroom || !image_url || !bathroom || !price || !sale_or_rent || !owner_phone_number || !owner_email) {\n      util.setError(400, 'Please provide complete details');\n      return util.send(res);\n    }\n    cloudinary.uploader.upload(image_url, async (result) => {\n      const newProperty = {\n        city,\n        estate,\n        type,\n        bedroom,\n        bathroom,\n        price,\n        sale_or_rent,\n        image_url: result.url,\n        owner_phone_number,\n        owner_email\n      };\n      try {\n        const createdProperty = await PropertyService.addProperty(newProperty);\n        util.setSuccess(201, 'Property Added!', createdProperty);\n        return util.send(res);\n      } catch (error) {\n        util.setError(400, error.message);\n        return util.send(res);\n      }\n    });\n  }\n\n  static async getAllProperties(req, res) {\n    try {\n      const allProperties = await PropertyService.getAllProperties();\n      if (allProperties.length > 0) {\n        util.setSuccess(200, 'Properties retrieved', allProperties);\n      } else {\n        util.setSuccess(200, 'No property found');\n      }\n      return util.send(res);\n    } catch (error) {\n      util.setError(400, error);\n      return util.send(res);\n    }\n  }\n\n  static async getAProperty(req, res) {\n    const { id } = req.params;\n\n    if (!Number(id)) {\n      util.setError(400, 'Please input a valid numeric value');\n      return util.send(res);\n    }\n\n    try {\n      const theProperty = await PropertyService.getAProperty(id);\n\n      if(!theProperty) {\n        util.setError(404, `Cannot find property with the id ${id}`);\n      } else {\n        util.setSuccess(200, 'Found Property', theProperty);\n      }\n      return util.send(res);\n    } catch (error) {\n      util.setError(404, error);\n      return util.send(res);\n    }\n  }\n\n  static async updateProperty(req, res) {\n    const alteredProperty = req.body;\n    const { id } = req.params;\n    if (!Number(id)) {\n      util.setError(400, 'Please input a valid numeric value');\n      return util.send(res);\n    }\n    try {\n      const updateProperty = await PropertyService.updateProperty(id, alteredProperty);\n      if(!updateProperty) {\n        util.setError(404, `Cannot find property with the id: ${id}`);\n      } else {\n        util.setSuccess(200, 'Property updated', updateProperty);\n      }\n      return util.send(res);\n    } catch (error) {\n      util.setError(404, error);\n      return util.send(res);\n    }\n  }\n\n  static async deleteProperty(req, res) {\n    const { id } = req.params;\n\n    if (!Number(id)) {\n      util.setError(400, 'Please provide a numeric value');\n      return util.send(res);\n    }\n\n    try {\n      const propertyToDelete = await PropertyService.deleteProperty(id);\n\n      if (propertyToDelete) {\n        util.setSuccess(200, 'Property deleted');\n      } else {\n        util.setError(404, `Property with the id ${id} cannot be found`);\n      }\n      return util.send(res);\n    } catch (error) {\n      util.setError(400, error);\n      return util.send(res);\n    }\n  }\n}\n\nexport default PropertyController;\n"],"file":"PropertyController.js"}